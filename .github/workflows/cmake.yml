name: CMake

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu",
            os: ubuntu-latest,
            build_type: RelWithDebInfo,
            gtk_tsm: "On"
          }
        - {
            name: "macOS",
            os: macos-latest,
            build_type: RelWithDebInfo,
            gtk_tsm: "Off"
          }
        - {
            name: "Windows",
            os: windows-latest,
            build_type: Release,
            gtk_tsm: "Off"
          }

    steps:
    - uses: actions/checkout@v2

    - name: Print env
      run: |
        echo github.event.action: ${{ github.event.action }}
        echo github.event_name: ${{ github.event_name }}

    - name: Install Conan
      run: pip3 install conan

    - name: Install dependencies on Ubuntu
      if: startsWith(matrix.config.name, 'Ubuntu')
      run: sudo apt-get install -y valgrind libgtk-3-dev libpango1.0-dev pkg-config

    - name: Create build directory on Unix
      if: ${{ !startsWith(matrix.config.name, 'Windows') }}
      run: mkdir build

    - name: Create build directory on Windows
      if: startsWith(matrix.config.name, 'Windows')
      run: md build

    - name: Install libcheck
      working-directory: ./build
      run: conan install .. --build=missing

    - name: Configure CMake on Unix
      if: ${{ !startsWith(matrix.config.name, 'Windows') }}
      working-directory: ./build
      run: cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -DBUILD_TESTING=On -DBUILD_GTKTSM=${{ matrix.config.gtk_tsm }}

    - name: Configure CMake on Windows
      if: startsWith(matrix.config.name, 'Windows')
      working-directory: ./build
      run: cmake .. -G "Visual Studio 17" -DBUILD_SHARED_LIBS=Off -DBUILD_TESTING=On -DBUILD_GTKTSM=${{ matrix.config.gtk_tsm }}

    - name: Build on Unix
      if: ${{ !startsWith(matrix.config.name, 'Windows') }}
      working-directory: ./build
      run: cmake --build .

    - name: Build on Windows
      if: startsWith(matrix.config.name, 'Windows')
      working-directory: ./build
      run: cmake --build . --config ${{ matrix.config.build_type }}

    - name: Test
      working-directory: ./build
      run: ctest -C ${{ matrix.config.build_type }}

